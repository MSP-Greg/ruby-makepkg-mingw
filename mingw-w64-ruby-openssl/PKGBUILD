# Maintainer: Alexey Pavlov <Alexpux@gmail.com>

_realname=openssl
pkgbase=mingw-w64-ruby-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-ruby-${_realname}")
_ver=1.1.0e
# use a pacman compatible version scheme
pkgver=${_ver/[a-z]/.${_ver//[0-9.]/}}
pkgrel=1
pkgdesc="The Open Source toolkit for Secure Sockets Layer and Transport Layer Security (mingw-w64)"
url="https://www.openssl.org"
license=('BSD')
arch=('any')
depends=("${MINGW_PACKAGE_PREFIX}-ca-certificates"
         "${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-zlib")
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc")
options=('strip' '!buildflags' 'staticlibs')
noextract=(${_realname}-${_ver}.tar.gz)
source=(https://www.openssl.org/source/${_realname}-${_ver}.tar.gz{,.asc}
        'openssl-1.1.0e-makefile.patch')
sha256sums=('57be8618979d80c910728cfc99369bf97b2a1abd8f366ab6ebdee8975ad3874c'
            '05ab4b1019da59963890509ad9ff3142c72df0b3baf4a38043392aff99e6a13d'
            '7e1113888ab10413e982fa8d2fbc7b39b54012705a25a0d43b462f0ef8cd1391')

validpgpkeys=('8657ABB260F056B1E5190839D9C4D26D0E604491')

prepare() {
  # Clean up old sources so re-patching doesn't fail.
  [[ -d ${srcdir}/${_realname}-${_ver} ]] && rm -rf ${srcdir}/${_realname}-${_ver}
  tar -xzvf ${_realname}-${_ver}.tar.gz -C ${srcdir} || true
  cd ${srcdir}/${_realname}-${_ver}

  patch -p0 -i ${srcdir}/openssl-1.1.0e-makefile.patch

}

build() {
  # No support for out-of-source builds
  mkdir -p ${srcdir}/build-${CARCH}
  cp -a ${srcdir}/${_realname}-${_ver}/* ${srcdir}/build-${CARCH}

  # Use mingw cflags instead of hardcoded ones
  sed -i -e '/^"mingw"/ s/-fomit-frame-pointer -O3 -march=i486 -Wall/-O2 -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions --param=ssp-buffer-size=4/' ${srcdir}/build-${CARCH}/Configure

  _mingw=mingw
  if $(echo ${CARCH} | grep -q x86_64); then
    _mingw=mingw64
  fi
  cd "${srcdir}/build-${CARCH}"
  export MSYS2_ARG_CONV_EXCL="--prefix="
  
  echo "dir = ${srcdir}/build-${CARCH}   --prefix = ${MINGW_PREFIX}   _mingw = ${_mingw}"
  
  ./Configure \
    --prefix=${MINGW_PREFIX} \
    --openssldir=${MINGW_PREFIX} \
    --api=1.0.0 \
    ${_mingw} \
    shared \
    zlib-dynamic \
    enable-capieng

  echo "MINGW_PREFIX = ${MINGW_PREFIX}   make dir = ${srcdir}/build-${CARCH}"
  cd "${srcdir}/build-${CARCH}"
  make -j1 ZLIB_INCLUDE=-I"${MINGW_PREFIX}"/include depend all
}

check() {
  cd "${srcdir}/build-${CARCH}"
#  make -j1 test
  make -ij1 test
}

package() {
  echo "pkgdir = ${pkgdir}   cd ${srcdir}/build-${CARCH}"

  mkdir -p "${pkgdir}${MINGW_PREFIX}"/bin
  mkdir -p "${pkgdir}${MINGW_PREFIX}"/include/openssl
  mkdir -p "${pkgdir}${MINGW_PREFIX}"/lib/engines-1_1
  mkdir    "${pkgdir}${MINGW_PREFIX}"/lib/pkgconfig
  mkdir -p "${pkgdir}${MINGW_PREFIX}"/share/licenses/openssl
  
  cd "${srcdir}/build-${CARCH}"
  make -j1 DESTDIR="${pkgdir}" MANDIR=${MINGW_PREFIX}/share/man MANSUFFIX=ssl install
  
  install -D -m644 LICENSE ${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE

  chmod -R 777 "${pkgdir}${MINGW_PREFIX}"/bin
  chmod -R 777 "${pkgdir}${MINGW_PREFIX}"/lib
#  chmod -R 777 "${pkgdir}${MINGW_PREFIX}"/lib/engines

  install -m644 ms/applink.c "${pkgdir}${MINGW_PREFIX}"/include/openssl/
  rm -rf "${pkgdir}${MINGW_PREFIX}"/bin/c_rehash
  rm -rf "${pkgdir}${MINGW_PREFIX}"/{ssl/misc,ssl/man}
}
